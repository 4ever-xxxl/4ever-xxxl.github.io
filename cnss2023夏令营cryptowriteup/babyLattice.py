from Crypto.Util.number import *
from secret import flag


assert len(flag) == 32
flagArg = []
for i in range(0,32,8):
    flag_tmp = bytes_to_long(flag[i:i+8])
    assert flag_tmp < 2**64
    flagArg.append(flag_tmp)

class Equation:
    def __init__(self,arg):
        assert len(arg)==4
        self.arg = arg
        self.modulus = getRandomInteger(512)
    def output(self):
        ans = 0
        print(f"the modulus is {self.modulus}")
        for i in range(4):
            tmp = getRandomInteger(512)
            print(f'The number of the {i} round is {tmp}')
            ans+=self.arg[i]*tmp
        ans = ans%self.modulus
        print(f'The result is {ans}')

EzLineModulus = Equation(flagArg)
EzLineModulus.output()

#the modulus is 4653980939589101565044285021945025573290906789132633751963110127801187748089540230208429714310516635848025358481189017398970169440484136391436220837417791
#The number of the 0 round is 7163515288721018524391838724005494502072524058809935946689587023614778895762400663698973734684519790842142248155478226513293289043832391054661263177469005
#The number of the 1 round is 13155134533945105613277690072743652931283618211062662861216511364398097684219572559463369279253337759860439150691008846033587645344197431244106331100681641
#The number of the 2 round is 8450640520436960190933104494093081291057363628588171820766164606066614201483259024304043681871965360847257453187101669512010469318096007617859083021766564
#The number of the 3 round is 798383352075970107818638521362593273862636131165588181505120596765884650403289567593307005746576184176902675297124272602141002375036927828390204063589274
#The result is 58831711102590059067743519228568722360433408071362335858674496753241059990433991177195518029785828762522018556332340356592798263267784406825183284767956